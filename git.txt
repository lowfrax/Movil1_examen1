************* navegacion linux
(ls) mira los componentes actuales
(cd nombe_carpeta) entra en una carpeta especifica
(cd ..) regresa al directorio anterior 


************ gits de creacion
(git remote add origin (url)) conecta el repositorio local con el que esta en la nube
(touch git.txt) crea un archivo txt
(git clone +url) clona el repositorio en la direccion actual
(git clone --branch <nombre-rama> --single-branch <url-del-repo>) clona una rama en especifico del repositorio
(mkdir nombre_carpeta) crea una carpeta en la direccion actual

Remove-Item -Recurse -Force .\ConsultorioUTH





************ gits de actualizacion

(git fetch) verifica si existen cambios realizados en el repositorio
(git pull origin test-1) trae todos los cambios en base a esa rama (no confundir ramas o el local se mesclara)
(git reset --hard HEAD@{1} ) regresa la rama local al estado anterior del pull en 1 salto

(git init) crea un repositorio de git nuevo
(git status) mira el estatus de los archivos en commit o creados que no se han guardado, o diferencias entre remoto y local
(git add .) agrega todos los archivos al commit
(git commit -m "mensaje") mensaje del commit
(git push) subimos el archivo 
(git log) mira el historial de los commits y en que rama, precionar q para salir
(git checkout (codigo del commit)) cambia de commit segun el historial
(git checkout "rama") cambia de rama local
(git push --set-upstream origin master)) (si se creo una nueva rama local se subirá el código a la rama mencionada y si no existe se crear una nueva)
*************** gits de manipulacion de ramas

(git branch) visualiza las ramas existentes de forma local
(git branch -r) visualizacion de ramas en el repositorio

(git checkout nombre-de-la-rama) cambio de la rama seleccionada
(git switch -c "nombre de la rama") crea una nueva rama
(git switch (nombre de la rama)) cambio de rama.
(git push origin (nombreRama)) subida de commits
(git push -u origin (nombreRama)) subida de la rama de origen a github
(git push origin --delete (rama)) eliminacion de una rama del repositorio
(git branch -D (rama)) eliminacion de la rama de forma local



**************** proceso de paso de inforacion de una rama a otra
(git add .)
(git commit -m "")
(git push origin (nombre de la rama origen)) subimos todos los commits pendientes a la rama actual

##tenemos que hacer un cambio de rama a la rama que queremos que la informacion sea pasada

(git checkout (rama))

##hacemos un marge de la rama que queremos la informacion de todos los commits existentes, el merge funciona tal que hayq que estar
en la rama que se quiere actualizar y especificar de la que se tomaran los datos a actualizar

(git merge (main))

****************** Traer todas las ramas remotas a las locales y crearlas en caso que no existan

(fetch origin "+refs/heads/*:refs/remotes/origin/*" )
(git branch -r) muestra todas las ramas locales


*************** push de una rama a otra un commit hacer un log para ver el codigo del commit
git push origin 5ed2fca99a58abe72b0db7ad39644b518e136ad9:refs/heads/test-2


************ si existen cambios locales que no se quieren converar y se quiere hacer un pull

git restore .       # Borra tus cambios locales no confirmados
git pull            # Ahora sí puedes hacer pull sin errores




